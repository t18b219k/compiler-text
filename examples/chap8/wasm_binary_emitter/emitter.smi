(*
WASM バイナリの出力
*)
_require "./Type.smi" 
structure Emitter = 
struct
    datatype typeidx = typeidx of word32
    datatype funcidx = funcidx of word32 
    datatype tableidx = tabledidx of word32 
    datatype memidx = memidx of word32 
    datatype globalidx = globalidx of word32 
    datatype elemidx = elemidx of word32 
    datatype dataidx = dataidx of word32 
    datatype localidx = localidx of word32
    datatype labelidx = labelidx of word32
    datatype section_kind = custom|ty|import|function|table|memory|global|export|start|element|code|data|data_count
    type 'a section = {kind:section_kind,size:word32,content:'a}    
    val section_id : section_kind->word8 
end