_require "basis.smi"
_require "reify.smi"
_require "../typeinf/Type.smi" 

structure TypedInstruction = 
struct
  type ty =Type.ty
  datatype prim = EQ | ADD | SUB | MUL | DIV
  datatype inst 
    = PushI of int | PushS of string | PushB of bool
    | Acc of string * ty| App of ty| Pair of ty| Proj1 of ty| Proj2 of ty
    | Prim of prim | MkCLS of string * inst list *ty
    | MkREC of string * string * inst list *ty
    | If of inst list * inst list *ty| Ret of ty
  type C = inst list
  val codeToString :  C -> string
  val instToString :  inst -> string
  val instructionToTy: inst -> ty
end
